"""initial

Revision ID: fece060b1c7d
Revises: 
Create Date: 2023-04-27 00:35:33.307790

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fece060b1c7d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('dept_id', sa.Integer(), nullable=False),
    sa.Column('deptname', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('dept_id')
    )
    op.create_index(op.f('ix_departments_dept_id'), 'departments', ['dept_id'], unique=False)
    op.create_index(op.f('ix_departments_deptname'), 'departments', ['deptname'], unique=False)
    op.create_table('event',
    sa.Column('event_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('location_url', sa.String(), nullable=True),
    sa.Column('eventdate', sa.String(), nullable=True),
    sa.Column('time', sa.String(), nullable=True),
    sa.Column('imageUrl', sa.String(), nullable=True),
    sa.Column('host', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_index(op.f('ix_event_event_id'), 'event', ['event_id'], unique=False)
    op.create_index(op.f('ix_event_eventdate'), 'event', ['eventdate'], unique=False)
    op.create_index(op.f('ix_event_host'), 'event', ['host'], unique=False)
    op.create_index(op.f('ix_event_imageUrl'), 'event', ['imageUrl'], unique=False)
    op.create_index(op.f('ix_event_location'), 'event', ['location'], unique=False)
    op.create_index(op.f('ix_event_location_url'), 'event', ['location_url'], unique=False)
    op.create_index(op.f('ix_event_time'), 'event', ['time'], unique=False)
    op.create_index(op.f('ix_event_title'), 'event', ['title'], unique=False)
    op.create_table('userroles',
    sa.Column('userrole_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('userrole_id')
    )
    op.create_index(op.f('ix_userroles_role'), 'userroles', ['role'], unique=True)
    op.create_index(op.f('ix_userroles_userrole_id'), 'userroles', ['userrole_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('Firstname', sa.String(), nullable=False),
    sa.Column('Lastname', sa.String(), nullable=False),
    sa.Column('D_O_B', sa.Date(), nullable=False),
    sa.Column('nationality', sa.String(), nullable=False),
    sa.Column('country_of_residence', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('country_code', sa.String(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('messages',
    sa.Column('msg_id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('message', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('msg_id')
    )
    op.create_index(op.f('ix_messages_msg_id'), 'messages', ['msg_id'], unique=False)
    op.create_table('notification',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('to_user', postgresql.UUID(), nullable=False),
    sa.Column('from_user', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['from_user'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['to_user'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_index(op.f('ix_notification_notification_id'), 'notification', ['notification_id'], unique=False)
    op.create_table('rosters',
    sa.Column('roster_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('event_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('Firstname', sa.String(), nullable=False),
    sa.Column('Lastname', sa.String(), nullable=False),
    sa.Column('response', sa.String(), nullable=True),
    sa.Column('response_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('roster_id')
    )
    op.create_index(op.f('ix_rosters_roster_id'), 'rosters', ['roster_id'], unique=False)
    op.create_table('unavailabilities',
    sa.Column('aval_id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('aval_id')
    )
    op.create_index(op.f('ix_unavailabilities_aval_id'), 'unavailabilities', ['aval_id'], unique=False)
    op.create_index(op.f('ix_unavailabilities_end_date'), 'unavailabilities', ['end_date'], unique=False)
    op.create_index(op.f('ix_unavailabilities_start_date'), 'unavailabilities', ['start_date'], unique=False)
    op.create_table('userdepartment',
    sa.Column('userdept_id', sa.Integer(), nullable=False),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('dept_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dept_id'], ['departments.dept_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('userdept_id')
    )
    op.create_index(op.f('ix_userdepartment_userdept_id'), 'userdepartment', ['userdept_id'], unique=False)
    op.create_table('userrolesassigned',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userrole_id', sa.String(), nullable=True),
    sa.Column('user_id', postgresql.UUID(), nullable=False),
    sa.Column('Firstname', sa.String(), nullable=False),
    sa.Column('Lastname', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_userrolesassigned_id'), 'userrolesassigned', ['id'], unique=False)
    op.create_index(op.f('ix_userrolesassigned_userrole_id'), 'userrolesassigned', ['userrole_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_userrolesassigned_userrole_id'), table_name='userrolesassigned')
    op.drop_index(op.f('ix_userrolesassigned_id'), table_name='userrolesassigned')
    op.drop_table('userrolesassigned')
    op.drop_index(op.f('ix_userdepartment_userdept_id'), table_name='userdepartment')
    op.drop_table('userdepartment')
    op.drop_index(op.f('ix_unavailabilities_start_date'), table_name='unavailabilities')
    op.drop_index(op.f('ix_unavailabilities_end_date'), table_name='unavailabilities')
    op.drop_index(op.f('ix_unavailabilities_aval_id'), table_name='unavailabilities')
    op.drop_table('unavailabilities')
    op.drop_index(op.f('ix_rosters_roster_id'), table_name='rosters')
    op.drop_table('rosters')
    op.drop_index(op.f('ix_notification_notification_id'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_messages_msg_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_userroles_userrole_id'), table_name='userroles')
    op.drop_index(op.f('ix_userroles_role'), table_name='userroles')
    op.drop_table('userroles')
    op.drop_index(op.f('ix_event_title'), table_name='event')
    op.drop_index(op.f('ix_event_time'), table_name='event')
    op.drop_index(op.f('ix_event_location_url'), table_name='event')
    op.drop_index(op.f('ix_event_location'), table_name='event')
    op.drop_index(op.f('ix_event_imageUrl'), table_name='event')
    op.drop_index(op.f('ix_event_host'), table_name='event')
    op.drop_index(op.f('ix_event_eventdate'), table_name='event')
    op.drop_index(op.f('ix_event_event_id'), table_name='event')
    op.drop_table('event')
    op.drop_index(op.f('ix_departments_deptname'), table_name='departments')
    op.drop_index(op.f('ix_departments_dept_id'), table_name='departments')
    op.drop_table('departments')
    # ### end Alembic commands ###
